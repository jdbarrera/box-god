{"version":3,"sources":["utils/GameEngineExport.js","components/ControlCenter.js","components/ScoreView.js","components/GameHeader.js","beogAPI/beogAPI.js","redux/actions.js","redux/actionTypes.js","redux/selectors.js","components/EndScore.js","renderers/Bezos.js","components/EndGame.js","renderers/Box.js","renderers/Circle.js","renderers/CloudLine.js","renderers/Platform.js","levels/LevelOne.js","systems/physics.js","renderers/MinusOne.js","systems/Boxes.js","utils/CircleFunctions.js","renderers/PlusOne.js","systems/Circles.js","systems/hitIndicators.js","Game.js","components/Login.js","components/UserInfo.js","components/CreateAccount.js","components/HowToPlay.js","components/PlayOnMobile.js","components/start-screen.js","redux/reducers/score.js","redux/reducers/user.js","redux/reducers/index.js","redux/store.js","App.js","assets/bezos-face.png","assets/bezos-face-mad.png","assets/green-plat.png","assets/cloud-37010_640.png","assets/Full-background.png"],"names":["gameEngineExport","Platform","OS","GameEngineNative","GameEngineWeb","styles","StyleSheet","create","pauseButtonContainer","alignItems","flex","pauseButton","backgroundColor","paddingTop","paddingBottom","borderRadius","width","marginRight","homeButton","marginTop","startButton","text","color","fontSize","ControlCenter","props","View","style","isRunning","TouchableOpacity","onPress","pauseGame","Text","startGame","returnHome","scoreView","paddingLeft","Constants","statusBarHeight","fontWeight","ScoreView","score","points","lives","propTypes","PropTypes","object","gameHeader","flexDirection","GameHeader","func","userMe","loginUserAPI","userDets","a","async","axios","post","response","data","logoutUserAPI","token","headers","Authorization","validateUserAPI","get","refreshUserAPI","jwt","createUserAPI","user","getHighScoreAPI","meta","boxgod_score","updateHighScoreAPI","scoreError","error","type","payload","loginUserSuccess","loginUserFailure","loginUserBeog","dispatch","loginResponse","success","message","getHighScoreBeog","validateUserBeog","userResponse","setHighScore","uploadHighScoreBeog","newScore","hiScore","getUser","store","getScore","EndGame","userToken","userHiScore","currentScore","number","restart","connect","state","bezosImage","require","bezosFaceMad","facePosCounter","Bezos","useState","facePos","setFacePos","size","height","x","xPos","y","yPos","changeFacePosition","useEffect","timer","setInterval","clearInterval","left","top","position","zIndex","justifyContent","Image","resizeMode","source","endFace","transform","rotate","array","string","Dimensions","overlay","bottom","right","endGameText","scoreText","highScoreText","button","border","marginBottom","loading","ActivityIndicator","EndScore","WebBrowser","returnToHome","Box","body","angle","Circle","radius","cloud","CloudLine","platformImage","levelOneEntities","game","boxSize","Math","trunc","max","circleSize","circleDemon","Matter","Bodies","circle","density","frictionAir","trajectory","randomInt","floor","rectangle","isStatic","platform1","engine","Engine","enableSleeping","world","World","add","physics","renderer","cloudLine","Physics","entities","time","update","delta","MinusOne","BoxCollisions","box","SAT","collides","collided","hitCircle","Composite","remove","current","minusOne","CreateBox","touches","screen","filter","t","forEach","event","pageY","pageX","restitution","input","window","find","name","innerWidth","innerHeight","randomSide","circleRadius","side","PlusOne","CircleCollision","plusOne","CircleTrajectory","circleBody","Body","set","setPosition","MoveHitIndicators","newYPos","backgroundImage","gameContainer","maxWidth","overflow","setPoints","setLives","setIsRunning","useRef","swap","getEntities","level","ImageBackground","systems","ref","running","onEvent","e","StatusBar","login","createAccountButton","borderColor","borderBottomWidth","margin","errorText","email","setEmail","password","setPassword","formValid","setFormValid","formErrorMsg","setFormErrorMsg","KeyboardAvoidingView","behavior","TextInput","placeholder","placeholderTextColor","value","onChangeText","username","autoCapitalize","secureTextEntry","test","validateEmail","length","handleCreateAccount","userInfo","userName","logoutUserBeog","displayname","handleStart","handleHowToPlay","createUserBeog","createUserResponse","newUser","firstName","setFirstName","lastName","setLastName","first_name","last_name","AUTH_KEY","container","h1","introText","instructionText","HowToPlay","PlayOnMobile","StartScreen","refreshUser","refreshUserBeog","requestTimedOut","setState","prevState","isPlaying","isCreateAccount","setIsLoggedIn","isLoggedIn","isHowToPlay","handleStartClick","bind","this","goBack","companyTags","headerText","React","newToken","initialState","action","user_login","user_email","display_name","combineReducers","reactNativeStorage","createSecureStore","persistConfig","key","storage","webStorage","blacklist","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","rootReducer","createStore","applyMiddleware","thunk","persistor","persistStore","App","module","exports"],"mappings":"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","file":"static/js/app.e2d24838.chunk.js","sourcesContent":["import React from 'react';\r\nimport { GameEngine as GameEngineNative } from 'react-native-game-engine';\r\nimport { GameEngine as GameEngineWeb } from 'react-game-engine';\r\nimport { Platform } from 'react-native';\r\n\r\nconst gameEngineExport = Platform.OS === 'ios' || Platform.OS === 'android' ? GameEngineNative : GameEngineWeb;\r\n\r\nexport default gameEngineExport;","import React, { Component } from \"react\";\r\nimport { View, Button, StyleSheet, TouchableOpacity, Text } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\nimport Constants from 'expo-constants';\r\n\r\nconst styles = StyleSheet.create({\r\n  pauseButtonContainer: {\r\n    alignItems: 'flex-end',\r\n    flex: 0.5,\r\n  },\r\n  pauseButton: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#ff2400\",\r\n    paddingTop: 10, paddingBottom: 10,\r\n    borderRadius: 30,\r\n    width: 100,\r\n    marginRight: 10,\r\n  },\r\n  homeButton: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#ff2400\",\r\n    marginTop: 10,\r\n    paddingTop: 10, paddingBottom: 10,\r\n    borderRadius: 30,\r\n    width: 100,\r\n    marginRight: 10,\r\n  },\r\n  startButton: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#3CB371\",\r\n    paddingTop: 10, paddingBottom: 10,\r\n    borderRadius: 30,\r\n    width: 100,\r\n    marginRight: 10,\r\n  },\r\n  text: {\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n  },\r\n});\r\n\r\nconst ControlCenter = (props) => {\r\n    \r\n    return (\r\n      <View style={styles.pauseButtonContainer}>\r\n        {props.isRunning \r\n        ? <TouchableOpacity style={styles.pauseButton} onPress={props.pauseGame} >\r\n            <Text style={styles.text}>Pause</Text>\r\n          </TouchableOpacity>\r\n        : <View>\r\n            <TouchableOpacity style={styles.startButton} onPress={props.startGame} >\r\n              <Text style={styles.text}>Start</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.homeButton} onPress={props.returnHome} >\r\n              <Text style={styles.text}>Home</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        }          \r\n      </View>\r\n    );\r\n}\r\n\r\nexport default ControlCenter;","import React, { Component } from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\nimport Constants from 'expo-constants';\r\n\r\nconst styles = StyleSheet.create({\r\n  scoreView: {\r\n    alignItems: 'flex-start',\r\n    flex: 0.5,\r\n    paddingLeft: Constants.statusBarHeight / 2,\r\n  },\r\n  text: {\r\n    color: '#000000',\r\n    fontSize: 20,\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nconst ScoreView = (props) => {\r\n    \r\n    return (\r\n      <View style={styles.scoreView}>\r\n        <Text style={styles.text} >Score: {props.score.points}</Text>\r\n        <Text style={styles.text} >Lives: {props.score.lives}</Text>\r\n      </View>\r\n    )\r\n}\r\n\r\nScoreView.propTypes = {\r\n    score: PropTypes.object,\r\n}\r\n\r\nexport default ScoreView;","import React, { Component } from \"react\";\r\nimport { View, Button, StyleSheet } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\nimport Constants from 'expo-constants';\r\n\r\nimport ControlCenter from './ControlCenter'\r\nimport ScoreView from './ScoreView'\r\n\r\nconst styles = StyleSheet.create({\r\n  gameHeader: {\r\n    paddingTop: Constants.statusBarHeight,\r\n    flexDirection: 'row',\r\n  },\r\n});\r\n\r\nconst GameHeader = (props) => {\r\n    \r\n    return (\r\n      <View style={styles.gameHeader}>\r\n          <ScoreView score={props.score} />\r\n          <ControlCenter \r\n          startGame={props.startGame} \r\n          pauseGame={props.pauseGame}\r\n          isRunning={props.isRunning} \r\n          returnHome={props.returnHome} />\r\n      </View>\r\n    );\r\n}\r\n\r\nGameHeader.propTypes = {\r\n    score: PropTypes.object,\r\n    startGame: PropTypes.func,\r\n    pauseGame: PropTypes.func,\r\n}\r\n\r\nexport default GameHeader;","import axios from \"axios\";\r\n\r\nconst userAuth = \"https://be-og.com/wp-json/simple-jwt-login/v1/auth\";\r\nconst validateUser = \"https://be-og.com/wp-json/simple-jwt-login/v1/auth/validate\";\r\nconst revokeUser = 'https://be-og.com/wp-json/simple-jwt-login/v1/auth/revoke';\r\nconst refreshUser = 'https://be-og.com/wp-json/simple-jwt-login/v1/auth/refresh';\r\nconst userMe = 'https://be-og.com/wp-json/wp/v2/users/me';\r\nconst createUser = 'https://be-og.com/wp-json/simple-jwt-login/v1/users';\r\n\r\n\r\nexport const loginUserAPI = async (userDets) => {\r\n  try {\r\n    const response = await axios.post(userAuth, userDets);\r\n    return response;\r\n  } catch (error) {\r\n    return error.response.data;\r\n  }  \r\n};\r\n\r\nexport const logoutUserAPI = async (token) => {\r\n  try {\r\n    const response = await axios.post(revokeUser, {}, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token\r\n      }\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error.response.data;\r\n  }  \r\n};\r\n\r\nexport const validateUserAPI = async (token) => {\r\n  try {\r\n    const response = await axios.get(validateUser, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token\r\n      }\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error.response.data;\r\n  }  \r\n};\r\n\r\nexport const refreshUserAPI = async (token) => {\r\n  try {\r\n    const response = await axios.post(refreshUser, {}, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token\r\n      }\r\n    });\r\n    return response.data.data.jwt;\r\n  } catch (error) {\r\n    return error.response.data;\r\n  }  \r\n};\r\n\r\nexport const createUserAPI = async (user) => {\r\n  try {\r\n    const response = await axios.post(createUser, user);\r\n    return response;\r\n  } catch (error) {\r\n    return error.response.data;\r\n  }  \r\n};\r\n\r\nexport const getHighScoreAPI = async (token) => {\r\n  try {\r\n    const response = await axios.get(userMe, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token\r\n      }\r\n    });\r\n    return response.data.meta.boxgod_score;\r\n  } catch (error) {\r\n    return error.response.data;\r\n  }  \r\n};\r\n\r\nexport const updateHighScoreAPI = async (score, token) => {\r\n  try {\r\n    const response = await axios.post(userMe, \r\n      {\r\n        meta: {\r\n          boxgod_score: score\r\n        }\r\n      }, \r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token\r\n        }\r\n      }\r\n    );\r\n    return response.data.meta.boxgod_score;\r\n  } catch (error) {\r\n    return error.response.data;\r\n  }   \r\n};","import { \r\n  SET_POINTS,\r\n  SET_LIVES,\r\n  SET_HISCORE,\r\n  SCORE_ERROR,\r\n  SCORE_ACTION,\r\n  USER_ACTION,\r\n  REFRESH_USER,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_FAILURE,\r\n  LOGOUT_USER_SUCCESS,\r\n  LOGOUT_USER_FAILURE,\r\n} from \"./actionTypes\";\r\n\r\nimport {\r\n  loginUserAPI, \r\n  logoutUserAPI, \r\n  validateUserAPI,\r\n  getHighScoreAPI,\r\n  updateHighScoreAPI,\r\n  refreshUserAPI,\r\n  createUserAPI,\r\n} from '../beogAPI/beogAPI';\r\nimport { create } from \"mathjs\";\r\n\r\nexport const userAction = () => ({\r\n  type: USER_ACTION,\r\n});\r\n\r\nexport const scoreAction = () => ({\r\n  type: SCORE_ACTION,\r\n});\r\n\r\nexport const scoreError = (error) => ({\r\n  type: SCORE_ERROR,\r\n  payload: error,\r\n});\r\n\r\nexport const refreshUser = (token) => ({\r\n  type: REFRESH_USER,\r\n  payload: token,\r\n});\r\n\r\nexport const loginUserSuccess = (user) => ({\r\n  type: LOGIN_USER_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nexport const loginUserFailure = (error) => ({\r\n  type: LOGIN_USER_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const logoutUserSuccess = () => ({\r\n  type: LOGOUT_USER_SUCCESS,\r\n});\r\n\r\nexport const logoutUserFailure = (error) => ({\r\n  type: LOGOUT_USER_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const loginUserBeog = (userDets) => async dispatch => {\r\n  dispatch(userAction());\r\n\r\n  try {\r\n    const loginResponse = await loginUserAPI(userDets);\r\n    if (loginResponse.success === false) {\r\n      dispatch(loginUserFailure(loginResponse.data.message));          \r\n    } else {\r\n      const jwt = loginResponse.data.data.jwt;\r\n      dispatch(getHighScoreBeog(jwt));\r\n      dispatch(validateUserBeog(jwt));  \r\n    }    \r\n  } catch (error) {\r\n    dispatch(loginUserFailure(error));\r\n  }\r\n}\r\n\r\nexport const validateUserBeog = (jwt) => async dispatch => {\r\n  try {\r\n    const userResponse = await validateUserAPI(jwt);\r\n    const user = userResponse.data.data;\r\n    dispatch(loginUserSuccess(user));\r\n  } catch (error) {\r\n    dispatch(loginUserFailure(error));\r\n  }\r\n}\r\n\r\nexport const refreshUserBeog = (jwt) => async dispatch => {\r\n  try {\r\n    const newToken = await refreshUserAPI(jwt);\r\n    dispatch(getHighScoreBeog(newToken));\r\n    dispatch(refreshUser(newToken));\r\n  } catch (error) {\r\n    dispatch(loginUserFailure(error));\r\n  }\r\n}\r\n\r\nexport const createUserBeog = (user) => async dispatch => {\r\n  dispatch(userAction());\r\n\r\n  try {\r\n    const createUserResponse = await createUserAPI(user);\r\n    if (createUserResponse.success === false) {\r\n      dispatch(loginUserFailure(createUserResponse.data.message));     \r\n    } else {\r\n      let newUser = {\r\n        email: user.email,\r\n        password: user.password,\r\n      }\r\n      dispatch(loginUserBeog(newUser));\r\n    }\r\n  } catch (error) {\r\n    dispatch(loginUserFailure(error));\r\n  }\r\n\r\n}\r\n\r\nexport const logoutUserBeog = (token) => async dispatch => {\r\n  dispatch(userAction());\r\n  \r\n  try {\r\n    const logoutResponse = await logoutUserAPI(token);\r\n    dispatch(logoutUserSuccess());\r\n  } catch (error) {\r\n    dispatch(scoreError(error));\r\n  }\r\n}\r\n\r\nexport const getHighScoreBeog = (token) => async dispatch => {\r\n  dispatch(scoreAction());\r\n  \r\n  try {\r\n    const score = await getHighScoreAPI(token);\r\n    dispatch(setHighScore(score));\r\n  } catch (error) {\r\n    dispatch(scoreError(error));\r\n  }\r\n}\r\n\r\nexport const uploadHighScoreBeog = (score, token) => async dispatch => {\r\n  dispatch(scoreAction());\r\n  \r\n  try {\r\n    const newScore = await updateHighScoreAPI(score, token);\r\n    dispatch(setHighScore(newScore));\r\n  } catch (error) {\r\n    dispatch(scoreError(error));\r\n  }\r\n}\r\n\r\nexport const setPoints = points => ({ type: SET_POINTS, payload: { points } });\r\n\r\nexport const setLives = lives => ({ type: SET_LIVES, payload: { lives } });\r\n\r\nexport const setHighScore = hiScore => ({ type: SET_HISCORE, payload: { hiScore } });","import { exp } from \"mathjs\";\r\n\r\nexport const SET_POINTS = 'SET_POINTS';\r\nexport const SET_LIVES = 'SET_LIVES';\r\nexport const SET_HISCORE = 'SET_HISCORE';\r\nexport const SCORE_ERROR = 'SCORE_ERROR';\r\nexport const SCORE_ACTION = 'SCORE_ACTION';\r\nexport const USER_ACTION = 'USER_ACTION';\r\nexport const REFRESH_USER = 'REFRESH_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILURE = 'LOGIN_USER_FAILURE';\r\nexport const LOGOUT_USER_SUCCESS = 'LOGOUT_USER_SUCCESS';\r\nexport const LOGOUT_USER_FAILURE = 'LOGOUT_USER_FAILURE';","export const getUser = store =>\r\n  store && store.user ? store.user : null;\r\n\r\nexport const getScore = store => \r\n  store && store.score ? store.score : 0;","import React, { useEffect } from \"react\";\r\nimport { View, StyleSheet, Text, TouchableOpacity, ActivityIndicator } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { uploadHighScoreBeog, getHighScoreBeog } from '../redux/actions';\r\nimport { getUser, getScore } from '../redux/selectors';\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    color: '#ffffff',\r\n    fontSize: 24,\r\n    paddingBottom: 10,\r\n  },\r\n});\r\n\r\nconst EndGame = (props) => {\r\n    if (props.userToken) {\r\n        return (\r\n            <View>\r\n              <Text style={styles.text}>Your Current HiScore: {props.userHiScore}</Text>\r\n            </View>    \r\n          );\r\n    } else {\r\n        return (\r\n            <View>\r\n              <Text style={styles.text}>Please Login to track High Score.</Text>\r\n            </View>    \r\n          );\r\n    }\r\n    \r\n}\r\n\r\nEndGame.propTypes = {\r\n    currentScore: PropTypes.number,\r\n    restart: PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: getUser(state),\r\n  score: getScore(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {uploadHighScoreBeog, getHighScoreBeog, getScore})(EndGame);","import React, { Component, useState, useEffect } from \"react\";\r\nimport { View, Image, Text } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst bezosImage = require('../assets/bezos-face.png');\r\nconst bezosFaceMad = require('../assets/bezos-face-mad.png');\r\nlet facePosCounter = 0;\r\n\r\nconst Bezos = ( props ) => {\r\n    const[facePos, setFacePos] = useState('tiltLeft');\r\n    const width = props.size[0];\r\n    const height = props.size[1];\r\n    const x = props.xPos - width / 2;\r\n    const y = props.yPos - height / 2;\r\n    \r\n\r\n    const changeFacePosition = () => {\r\n        facePosCounter++;\r\n        if (facePosCounter == 2) {\r\n            facePosCounter = 0;\r\n        }\r\n\r\n        switch (facePosCounter) {\r\n            case 0:\r\n                setFacePos('tiltLeft');\r\n                break;\r\n            case 1:\r\n                setFacePos('tiltRight');\r\n                break;\r\n            default:\r\n                setFacePos('normal');\r\n                break;\r\n        }        \r\n    }\r\n\r\n    useEffect(() => {\r\n        let timer = setInterval(changeFacePosition, 500);\r\n        return function cleanup() {\r\n            clearInterval(timer);\r\n          };\r\n    }, []); \r\n\r\n    if (props.xPos && props.yPos) {\r\n        return (    \r\n            <View \r\n                style={{\r\n                left: x, \r\n                top: y, \r\n                position: 'absolute',\r\n                zIndex: 2,\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                }}>\r\n                <Image style={{\r\n                    height: height,\r\n                    width: width,\r\n                    resizeMode: 'contain',\r\n                    }} source={bezosImage} />\r\n            </View>\r\n        );\r\n    } else if (props.endFace) {\r\n        return (\r\n            <View>\r\n                <Image style={{\r\n                    height: height,\r\n                    width: width,\r\n                    resizeMode: 'contain',\r\n                    }} source={bezosFaceMad} />\r\n            </View>\r\n        );\r\n    } else {\r\n        if (facePos == 'tiltLeft') {\r\n            return (    \r\n                <View style={{transform: [{rotate: '-30deg'}]}} >\r\n                    <Image style={{\r\n                        height: height,\r\n                        width: width,\r\n                        resizeMode: 'contain',\r\n                        }} source={bezosImage} />\r\n                </View>\r\n            );\r\n        } else if (facePos == 'tiltRight') {\r\n            return (    \r\n                <View style={{transform: [{rotate: '30deg'}]}} >\r\n                    <Image style={{\r\n                        height: height,\r\n                        width: width,\r\n                        resizeMode: 'contain',\r\n                        }} source={bezosImage} />\r\n                </View>\r\n            );\r\n        } else {\r\n            return (\r\n                <View>\r\n                    <Image style={{\r\n                        height: height,\r\n                        width: width,\r\n                        resizeMode: 'contain',\r\n                        }} source={bezosImage} />\r\n                </View>\r\n            );            \r\n        }        \r\n    }\r\n    \r\n    \r\n}\r\n\r\nBezos.propTypes = {\r\n    size: PropTypes.array, \r\n    color: PropTypes.string\r\n}\r\n\r\nexport default Bezos;","import React, { useEffect } from \"react\";\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport { View, StyleSheet, Text, TouchableOpacity, ActivityIndicator, Dimensions } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { uploadHighScoreBeog, getHighScoreBeog } from '../redux/actions';\r\nimport { getUser, getScore } from '../redux/selectors';\r\nimport EndScore from './EndScore';\r\nimport Bezos from '../renderers/Bezos';\r\n\r\nconst { width, height } = Dimensions.get(\"screen\");\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    zIndex: 3\r\n  },\r\n  endGameText: {\r\n    color: '#ffffff',    \r\n    fontSize: 24,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  scoreText: {\r\n    color: '#ffffff',\r\n    fontSize: 24,\r\n    paddingBottom: 10,\r\n  },\r\n  highScoreText: {\r\n    color: '#ffffff',\r\n    fontSize: 24,\r\n    paddingBottom: 10,\r\n  },\r\n  text: {\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#3CB371\",\r\n    paddingTop: 10, paddingBottom: 10,\r\n    width: 250,\r\n    borderRadius: 30,\r\n  },\r\n  border: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  }\r\n});\r\n\r\nconst EndGame = (props) => {\r\n\r\n  const uploadScore = async () => {\r\n    if (props.score.points > props.score.hiScore) {\r\n      props.uploadHighScoreBeog(props.score.points, props.user.token);\r\n    }    \r\n  }\r\n\r\n  useEffect(() => {\r\n    uploadScore();\r\n  }, []);\r\n\r\n  const handleOpenWithWebBrowser = () => {\r\n    WebBrowser.openBrowserAsync('https://be-og.com/boxgod');\r\n  };\r\n    \r\n    return (\r\n      <View style={styles.overlay}>\r\n        <Bezos endFace={true} size={[width/3, height/4]} />\r\n        <Text style={styles.endGameText}>Game Over</Text>\r\n        <Text style={styles.scoreText}>Score: {props.currentScore}</Text>\r\n        {props.score.loading\r\n        ? <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n        : <EndScore userToken={props.user.token} userHiScore={props.score.hiScore}/> }\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={handleOpenWithWebBrowser}\r\n        >\r\n          <Text style={styles.text} >View Scoreboard</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={[styles.button, styles.border]}\r\n          onPress={props.restart}\r\n        >\r\n          <Text style={styles.text} >Restart</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={props.returnToHome}\r\n        >\r\n          <Text style={styles.text} >Return to Home Screen</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n}\r\n\r\nEndGame.propTypes = {\r\n    currentScore: PropTypes.number,\r\n    restart: PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: getUser(state),\r\n  score: getScore(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {uploadHighScoreBeog, getHighScoreBeog, getScore})(EndGame);","import React, { Component } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Box = (props) => {\r\n    const width = props.size[0];\r\n    const height = props.size[1];\r\n    const x = props.body.position.x - width / 2;\r\n    const y = props.body.position.y - height / 2;\r\n    const angle = props.body.angle;\r\n    \r\n    return (\r\n      <View\r\n        style={{\r\n            position: \"absolute\",\r\n            left: x,\r\n            top: y,\r\n            width: width,\r\n            height: height,\r\n            transform: [{ rotate: angle + \"rad\" }],\r\n            backgroundColor:  props.color || \"pink\"\r\n          }}/>\r\n    );\r\n}\r\n\r\nBox.propTypes = {\r\n    size: PropTypes.array,\r\n    body: PropTypes.object, \r\n    color: PropTypes.string\r\n}\r\n\r\nexport default Box;","import React, { Component } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Circle = (props) => {\r\n    const width = props.size[0];\r\n    const height = props.size[0];\r\n    const x = props.body.position.x - width / 2;\r\n    const y = props.body.position.y - height / 2;\r\n    const radius = props.size[1];\r\n    const angle = props.body.angle;\r\n    \r\n    return (\r\n      <View\r\n        style={{\r\n            position: \"absolute\",\r\n            left: x,\r\n            top: y,\r\n            width: width,\r\n            height: height,\r\n            borderRadius: radius,\r\n            transform: [{ rotate: angle + \"rad\" }],\r\n            backgroundColor:  props.color || \"pink\"\r\n          }}/>\r\n    );\r\n}\r\n\r\nCircle.propTypes = {\r\n    size: PropTypes.array,\r\n    body: PropTypes.object, \r\n    color: PropTypes.string\r\n}\r\n\r\nexport default Circle;","import React, { Component } from \"react\";\r\nimport { View, Image, StyleSheet } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = StyleSheet.create({\r\n  cloud: {\r\n    height: 60,\r\n    width: 80,\r\n    resizeMode: 'contain'\r\n  },\r\n});\r\n\r\nconst CloudLine = (props) => {\r\n    const width = props.size[0];\r\n    const height = props.size[1];\r\n    const x = 0;\r\n    const y = props.yPos;\r\n    const cloudWidth = styles.cloud.width - 10;\r\n    \r\n    return (\r\n      <View style={{position: 'absolute', zIndex: 2}}>    \r\n        <View \r\n          style={{\r\n            left: 0, top: y, position: 'absolute'\r\n          }}>\r\n            <Image style={styles.cloud} source={require('../assets/cloud-37010_640.png')} />\r\n        </View>\r\n        <View \r\n          style={{\r\n            left: 70, top: y, position: 'absolute'\r\n          }}>\r\n            <Image style={styles.cloud} source={require('../assets/cloud-37010_640.png')} />\r\n        </View>\r\n        <View \r\n          style={{\r\n            left: 140, top: y, position: 'absolute'\r\n          }}>\r\n            <Image style={styles.cloud} source={require('../assets/cloud-37010_640.png')} />\r\n        </View>\r\n        <View \r\n          style={{\r\n            left: 210, top: y, position: 'absolute'\r\n          }}>\r\n            <Image style={styles.cloud} source={require('../assets/cloud-37010_640.png')} />\r\n        </View>\r\n        <View \r\n          style={{\r\n            left: 280, top: y, position: 'absolute'\r\n          }}>\r\n            <Image style={styles.cloud} source={require('../assets/cloud-37010_640.png')} />\r\n        </View>\r\n        <View \r\n          style={{\r\n            left: 350, top: y, position: 'absolute'\r\n          }}>\r\n            <Image style={styles.cloud} source={require('../assets/cloud-37010_640.png')} />\r\n        </View>\r\n      </View>\r\n    );\r\n}\r\n\r\nCloudLine.propTypes = {\r\n    size: PropTypes.array, \r\n    color: PropTypes.string\r\n}\r\n\r\nexport default CloudLine;","import React, { Component } from \"react\";\r\nimport { View, Image } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst platformImage = require('../assets/green-plat.png')\r\n\r\nconst Platform = (props) => {\r\n    const width = props.size[0];\r\n    const height = props.size[1];\r\n    const x = props.body.position.x - width / 2;\r\n    const y = props.body.position.y - height / 2;\r\n    \r\n    return (\r\n      <Image\r\n        style={{\r\n            position: \"absolute\",\r\n            left: x,\r\n            top: y,\r\n            width: width,\r\n            height: height,\r\n          }}\r\n          resizeMode='stretch'\r\n          source={platformImage} />\r\n    );\r\n}\r\n\r\nPlatform.propTypes = {\r\n    size: PropTypes.array,\r\n    body: PropTypes.object,\r\n}\r\n\r\nexport default Platform;","import React, { useState, useEffect } from 'react';\r\nimport { Dimensions} from 'react-native';\r\nimport Matter from \"matter-js\";\r\nimport Box from '../renderers/Box';\r\nimport Circle from '../renderers/Circle';\r\nimport CloudLine from '../renderers/CloudLine';\r\nimport Platform from '../renderers/Platform';\r\n\r\nimport { randomInt } from 'mathjs';\r\n\r\nconst levelOneEntities = (game) => {\r\n  //get screen dimensions\r\n  let { width, height } = Dimensions.get(\"window\");\r\n    \r\n  //create boxes\r\n  const boxSize = Math.trunc(Math.max(width, height) * 0.075);\r\n\r\n  //create circle\r\n  const circleSize = Math.trunc(Math.max(width, height) * 0.075);\r\n  const radius = circleSize / 2;  \r\n  const circleDemon = Matter.Bodies.circle(0 - radius, height / 2.5, radius, { \r\n    density: 0.04, \r\n    frictionAir: 0.005,\r\n    trajectory: randomInt(20, 30) / 10,\r\n  });\r\n\r\n  //create floor\r\n  const floor = Matter.Bodies.rectangle(width / 2, height - boxSize, width * 2, boxSize * 2, { isStatic: true });\r\n\r\n  //create platforms\r\n  const platform1 = Matter.Bodies.rectangle(width / 2, height / 1.5, width / 3, boxSize / 2, { isStatic: true });\r\n\r\n  //create engine and world\r\n  const engine = Matter.Engine.create({ enableSleeping: false });\r\n  const world = engine.world;\r\n\r\n  //initialize world with entities\r\n  Matter.World.add(world, [circleDemon, floor, platform1]);\r\n\r\n  return {\r\n    physics: {\r\n      engine: engine,\r\n      world: world,\r\n      game: game,\r\n    },\r\n    circleDemon: { \r\n      body: circleDemon, \r\n      size: [circleSize, radius], \r\n      color: 'red', \r\n      renderer: Circle,\r\n    },\r\n    floor: { \r\n      body: floor, \r\n      size: [width, boxSize * 2], \r\n      color: \"green\", \r\n      renderer: Box, \r\n    },\r\n    platform1: {\r\n      body: platform1,\r\n      size: [width / 3, boxSize / 2],\r\n      renderer: Platform,\r\n    },\r\n    cloudLine: {\r\n      size: [width, boxSize / 4],\r\n      yPos: height / 2.5,\r\n      color: 'blue',\r\n      renderer: CloudLine,\r\n    },\r\n  }\r\n}\r\n\r\nexport default levelOneEntities;","import Matter from \"matter-js\";\r\n\r\nconst Physics = (entities, { time }) => {\r\n    let engine = entities[\"physics\"].engine;\r\n    Matter.Engine.update(engine, time.delta);\r\n    return entities;\r\n};\r\n\r\nexport default Physics;","import React, { Component } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MinusOne = (props) => {\r\n    const x = props.xPos;\r\n    const y = props.yPos;\r\n    \r\n    return (\r\n      <View\r\n        style={{\r\n            position: \"absolute\",\r\n            left: x,\r\n            top: y,\r\n            zIndex: 1,\r\n          }}>\r\n        <Text style={{\r\n          color: 'red',\r\n          fontSize: 20,\r\n          fontWeight: 'bold'\r\n          }}>- 1</Text>  \r\n      </View>\r\n    );\r\n}\r\n\r\nMinusOne.propTypes = {\r\n    xPos: PropTypes.number,\r\n    yPos: PropTypes.number,\r\n}\r\n\r\nexport default MinusOne;","import Matter from \"matter-js\";\r\nimport Box from '../renderers/Box';\r\nimport MinusOne from '../renderers/MinusOne';\r\nimport { Platform } from 'react-native';\r\n\r\nlet boxIds = 0;\r\n\r\nconst CreateBoxNative = (entities, { touches, screen }) => { \r\n  /*if ( Platform.OS === 'ios' || Platform.OS === 'android' ) {\r\n\r\n  }*/\r\n  \r\n  if (!entities.box) {\r\n    let cloudLine = entities.cloudLine.yPos\r\n    let world = entities[\"physics\"].world;\r\n    let boxSize = Math.trunc(Math.max(screen.width, screen.height) * 0.075);\r\n    touches.filter(t => t.type === \"press\").forEach(t => {\r\n            if (t.event.pageY < cloudLine) {\r\n              let box = Matter.Bodies.rectangle(\r\n                        t.event.pageX, t.event.pageY, \r\n                        boxSize, boxSize,\r\n                        { \r\n                          frictionAir: 0.021,\r\n                          restitution: 0.5, \r\n                          });\r\n              Matter.World.add(world, box);\r\n              entities.box = {\r\n                  body: box,\r\n                  size: [boxSize, boxSize],\r\n                  color: boxIds % 2 == 0 ? \"pink\" : \"#B8E986\",\r\n                  hitCircle: false,\r\n                  renderer: Box,\r\n              };\r\n            }\r\n    });\r\n  }\r\n  return entities;\r\n  \r\n};\r\n\r\nconst CreateBoxWeb = (entities, { input, window }) => {\r\n  const { payload } = input.find((x) => x.name === \"onMouseDown\") || {};\r\n\r\n  if (payload) {\r\n    if (!entities.box) {\r\n      let cloudLine = entities.cloudLine.yPos;\r\n      let world = entities[\"physics\"].world;\r\n      let boxSize = Math.trunc(\r\n        Math.max(window.innerWidth, window.innerHeight) * 0.075\r\n      );\r\n      if (payload.pageY < cloudLine) {\r\n        let box = Matter.Bodies.rectangle(\r\n          payload.pageX,\r\n          payload.pageY,\r\n          boxSize,\r\n          boxSize,\r\n          {\r\n            frictionAir: 0.021,\r\n            restitution: 0.5\r\n          }\r\n        );\r\n        Matter.World.add(world, box);\r\n        entities.box = {\r\n          body: box,\r\n          size: [boxSize, boxSize],\r\n          color: boxIds % 2 == 0 ? \"pink\" : \"#B8E986\",\r\n          hitCircle: false,\r\n          renderer: Box\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  return entities;\r\n};\r\n\r\nconst BoxCollisions = (entities) => {\r\n  let world = entities[\"physics\"].world;\r\n  let game = entities.physics.game;\r\n\r\n  if (entities.floor && entities.box) {\r\n    let collision = Matter.SAT.collides(entities.floor.body, entities.box.body);\r\n    if (collision.collided) {\r\n      if (!entities.box.hitCircle) {\r\n        //subtract point\r\n        game.current.dispatch({type: 'LIFE_LOST'});\r\n        let xPos = entities.box.body.position.x;\r\n        let yPos = entities.box.body.position.y;\r\n        Matter.Composite.remove(world, entities.box.body);\r\n        delete entities.box;\r\n\r\n        //MinusOne indication\r\n        entities.minusOne = {\r\n          xPos: xPos,\r\n          yPos: yPos,\r\n          renderer: MinusOne,\r\n        }                \r\n      } \r\n      else {\r\n        Matter.Composite.remove(world, entities.box.body);\r\n        delete entities.box;\r\n      }   \r\n    }\r\n  } \r\n\r\n  if (entities.platform1 && entities.box) {\r\n    let collision = Matter.SAT.collides(entities.platform1.body, entities.box.body);\r\n    if (collision.collided) {\r\n      if (!entities.box.hitCircle) {\r\n        //subtract point\r\n        game.current.dispatch({type: 'LIFE_LOST'});\r\n        let xPos = entities.box.body.position.x;\r\n        let yPos = entities.box.body.position.y;\r\n        Matter.Composite.remove(world, entities.box.body);\r\n        delete entities.box;\r\n\r\n        //MinusOne indication\r\n        entities.minusOne = {\r\n          xPos: xPos,\r\n          yPos: yPos,\r\n          renderer: MinusOne,\r\n        }             \r\n      } \r\n      else {\r\n        Matter.Composite.remove(world, entities.box.body);\r\n        delete entities.box;\r\n      } \r\n    }   \r\n  }\r\n      \r\n  return entities;\r\n};\r\n\r\nconst CreateBox = Platform.OS === 'ios' || Platform.OS === 'android' ? CreateBoxNative : CreateBoxWeb;\r\n\r\nexport {CreateBox, BoxCollisions};","import { randomInt } from 'mathjs';\r\n\r\nconst randomSide = (circleRadius, width) => {\r\n  let num = randomInt(0, 10);\r\n  const left = 0 - circleRadius;\r\n  const right = width + circleRadius;\r\n\r\n  if (num % 2 == 0) {\r\n    return {\r\n      side: left,\r\n      trajectory: randomInt(30, 60) / 10,\r\n    }\r\n  } else {\r\n    return {\r\n      side: right,\r\n      trajectory: (randomInt(30, 60) / 10) * -1,\r\n    }\r\n  }\r\n};\r\n\r\nexport {randomSide};","import React, { Component } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PlusOne = (props) => {\r\n    const x = props.xPos;\r\n    const y = props.yPos;\r\n    \r\n    return (\r\n      <View\r\n        style={{\r\n            position: \"absolute\",\r\n            left: x,\r\n            top: y,\r\n            zIndex: 1,\r\n          }}>\r\n        <Text style={{\r\n          color: 'green',\r\n          fontSize: 20,\r\n          fontWeight: 'bold'\r\n          }}>+ 1</Text>  \r\n      </View>\r\n    );\r\n}\r\n\r\nPlusOne.propTypes = {\r\n    xPos: PropTypes.number,\r\n    yPos: PropTypes.number,\r\n}\r\n\r\nexport default PlusOne;","import Matter from \"matter-js\";\r\nimport Circle from '../renderers/Circle';\r\nimport { Platform, Dimensions } from 'react-native';\r\nimport { randomInt } from 'mathjs';\r\nimport {randomSide} from '../utils/CircleFunctions';\r\nimport PlusOne from '../renderers/PlusOne';\r\n\r\nconst CircleCollisionNative = (entities, { touches, screen }) => {\r\n    let world = entities[\"physics\"].world;\r\n    let game = entities.physics.game;\r\n    let circleSize = entities.circleDemon.size[0];\r\n    let radius = entities.circleDemon.size[1];\r\n    let {side, trajectory} = randomSide(radius, screen.width);\r\n\r\n    if (entities.circleDemon && entities.box) {\r\n      let collision = Matter.SAT.collides(entities.circleDemon.body, entities.box.body);\r\n      if (collision.collided) {\r\n        //add point\r\n        game.current.dispatch({type: 'ADD_POINT'});\r\n\r\n        //mark box\r\n        entities.box.hitCircle = true;\r\n\r\n        //delete circle\r\n        let xPos = entities.circleDemon.body.position.x;\r\n        let yPos = entities.circleDemon.body.position.y;\r\n        Matter.Composite.remove(world, entities.circleDemon.body);        \r\n        delete entities.circleDemon;\r\n\r\n        //PlusOne indication\r\n        entities.plusOne = {\r\n          xPos: xPos,\r\n          yPos: yPos,\r\n          renderer: PlusOne,\r\n        }\r\n\r\n        //create new circle\r\n        let circleDemon = Matter.Bodies.circle(side, screen.height / 2.5, radius, { \r\n          density: 0.04, \r\n          frictionAir: 0.005,\r\n          trajectory: trajectory,\r\n        });\r\n\r\n        Matter.World.add(world, circleDemon);\r\n        entities.circleDemon = {\r\n          body: circleDemon, \r\n          size: [circleSize, radius], \r\n          color: 'red', \r\n          renderer: Circle,\r\n        }\r\n      }   \r\n    } \r\n      \r\n    return entities;\r\n};\r\n\r\nconst CircleCollisionWeb = (entities, {window}) => {\r\n    let world = entities[\"physics\"].world;\r\n    let game = entities.physics.game;\r\n    let circleSize = entities.circleDemon.size[0];\r\n    let radius = entities.circleDemon.size[1];\r\n    let {side, trajectory} = randomSide(radius, window.innerWidth);\r\n\r\n    if (entities.circleDemon && entities.box) {\r\n      let collision = Matter.SAT.collides(entities.circleDemon.body, entities.box.body);      \r\n      if (collision.collided) {\r\n        //add point\r\n        game.current.dispatch({type: 'ADD_POINT'});\r\n\r\n        //mark box\r\n        entities.box.hitCircle = true;\r\n        \r\n        //delete circle\r\n        let xPos = entities.circleDemon.body.position.x;\r\n        let yPos = entities.circleDemon.body.position.y;\r\n        Matter.Composite.remove(world, entities.circleDemon.body);        \r\n        delete entities.circleDemon;\r\n\r\n        //PlusOne indication\r\n        entities.plusOne = {\r\n          xPos: xPos,\r\n          yPos: yPos,\r\n          renderer: PlusOne,\r\n        }\r\n\r\n        //create new circle\r\n        let circleDemon = Matter.Bodies.circle(side, window.innerHeight / 2.5, radius, { \r\n          density: 0.04, \r\n          frictionAir: 0.005,\r\n          trajectory: trajectory,\r\n        });\r\n\r\n        Matter.World.add(world, circleDemon);\r\n        entities.circleDemon = {\r\n          body: circleDemon, \r\n          size: [circleSize, radius], \r\n          color: 'red', \r\n          renderer: Circle,\r\n        }\r\n      }   \r\n    } \r\n      \r\n    return entities;\r\n};\r\n\r\nconst CircleTrajectoryNative = (entities, {screen}) => {\r\n  let circleBody = entities.circleDemon.body;\r\n  let circleRadius = entities.circleDemon.size[1];\r\n  let {side, trajectory} = randomSide(circleRadius, screen.width);\r\n  \r\n  if (circleBody.position.x > screen.width + circleRadius || circleBody.position.x < 0 - circleRadius) {\r\n    Matter.Body.set(circleBody, {\r\n      trajectory: trajectory,\r\n    });\r\n\r\n    Matter.Body.setPosition(circleBody, {\r\n      x: side,\r\n      y: screen.height / 2.5,\r\n    });\r\n  }\r\n\r\n  Matter.Body.setPosition(circleBody, {\r\n    x: circleBody.position.x + circleBody.trajectory,\r\n    y: circleBody.position.y,\r\n  });\r\n  \r\n  return entities;\r\n};\r\n\r\nconst CircleTrajectoryWeb = (entities, {window}) => {\r\n  let circleBody = entities.circleDemon.body;\r\n  let circleRadius = entities.circleDemon.size[1];\r\n  let {side, trajectory} = randomSide(circleRadius, window.innerWidth);\r\n  \r\n  if (circleBody.position.x > window.innerWidth + circleRadius || circleBody.position.x < 0 - circleRadius) {\r\n    Matter.Body.set(circleBody, {\r\n      trajectory: trajectory,\r\n    });\r\n\r\n    Matter.Body.setPosition(circleBody, {\r\n      x: side,\r\n      y: window.innerHeight / 2.5,\r\n    });\r\n  }\r\n\r\n  Matter.Body.setPosition(circleBody, {\r\n    x: circleBody.position.x + circleBody.trajectory,\r\n    y: circleBody.position.y,\r\n  });\r\n  \r\n  return entities;\r\n};\r\n\r\nconst CircleCollision = Platform.OS === 'ios' || Platform.OS === 'android' ? CircleCollisionNative : CircleCollisionWeb;\r\nconst CircleTrajectory = Platform.OS === 'ios' || Platform.OS === 'android' ? CircleTrajectoryNative : CircleTrajectoryWeb;\r\n\r\nexport {CircleCollision, CircleTrajectory};","import Matter from \"matter-js\";\r\nimport Box from '../renderers/Box';\r\n\r\nlet boxIds = 0;\r\n\r\nconst MoveHitIndicators = (entities, { touches, screen }) => { \r\n  \r\n  if (entities.plusOne) {\r\n    let newYPos = entities.plusOne.yPos - 1;\r\n    entities.plusOne.yPos = newYPos;\r\n  }\r\n  if (entities.minusOne) {\r\n    let newYPos = entities.minusOne.yPos - 1;\r\n    entities.minusOne.yPos = newYPos;\r\n  }\r\n\r\n  return entities;\r\n  \r\n};\r\n\r\nexport {MoveHitIndicators};","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Text, View, StyleSheet, StatusBar, ImageBackground, Platform, Dimensions } from 'react-native';\r\nimport Constants from 'expo-constants';\r\nimport GameEngine from \"./utils/GameEngineExport\";\r\nimport GameHeader from './components/GameHeader';\r\nimport EndGame from './components/EndGame';\r\nimport levelOneEntities from './levels/LevelOne';\r\nimport Physics from './systems/physics';\r\nimport {CreateBox, BoxCollisions} from './systems/Boxes';\r\nimport {CircleCollision, CircleTrajectory} from './systems/Circles';\r\nimport {MoveHitIndicators} from './systems/hitIndicators';\r\nimport { connect } from 'react-redux';\r\nimport { getScore } from './redux/selectors';\r\nimport { setPoints, setLives } from './redux/actions';\r\n\r\nconst backgroundImage = require('./assets/Full-background.png');\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nconst Game = ( props ) => {\r\n  const [isRunning, setIsRunning] = useState(true);\r\n  const game = useRef(null);\r\n  \r\n  const pauseGame = () => {\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const startGame = () => {\r\n    setIsRunning(true);\r\n  };\r\n\r\n  const restart = () => {\r\n    props.setLives(3);\r\n    props.setPoints(0);\r\n    game.current.swap(getEntities(1, game));\r\n  };\r\n\r\n  const returnToHome = () => {\r\n    restart();\r\n    props.returnHome();\r\n  };\r\n\r\n  const onEvent = (e) => {\r\n    switch(e.type) {\r\n      case 'ADD_POINT':\r\n        props.setPoints(props.score.points + 1);\r\n        break;\r\n      case 'LIFE_LOST':\r\n        props.setLives(props.score.lives - 1);\r\n        break;\r\n    }    \r\n  }\r\n\r\n  const getEntities = (level, game) => {\r\n    return levelOneEntities(game);\r\n  }\r\n\r\n  return (\r\n      <View style={styles.gameContainer}>\r\n        <ImageBackground source={backgroundImage} style={styles.backgroundImage}>\r\n          <GameEngine \r\n          style={styles.game}\r\n          systems={[\r\n            Physics, \r\n            CreateBox, \r\n            BoxCollisions, \r\n            CircleCollision, \r\n            CircleTrajectory,\r\n            MoveHitIndicators\r\n            ]}\r\n          ref={game}\r\n          entities={getEntities(1, game)}\r\n          running={isRunning}\r\n          onEvent={onEvent}\r\n          >\r\n          {props.score.lives <= 0 && \r\n            <EndGame \r\n              restart={restart} \r\n              currentScore={props.score.points} \r\n              returnToHome={returnToHome} />}\r\n            <GameHeader \r\n              score={props.score}\r\n              startGame={startGame}\r\n              pauseGame={pauseGame}\r\n              isRunning={isRunning} \r\n              returnHome={returnToHome}/>        \r\n            <StatusBar />      \r\n          </GameEngine>\r\n        </ImageBackground>  \r\n      </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  gameContainer: {\r\n    flex: 1,\r\n    width: width,\r\n    maxWidth: 480,\r\n    backgroundColor: '#ffffff',\r\n    paddingTop: Constants.statusBarHeight,\r\n    overflow: 'hidden',    \r\n  },\r\n  game: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    paddingTop: Constants.statusBarHeight,\r\n  },\r\n  backgroundImage: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  score: getScore(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { setPoints, setLives })(Game);","import React, { useState } from \"react\";\r\nimport { View, Button, StyleSheet, TextInput, Text, ActivityIndicator, TouchableOpacity, KeyboardAvoidingView, Platform } from \"react-native\";\r\nimport { connect } from 'react-redux';\r\nimport { loginUserBeog, getHighScoreBeog } from '../redux/actions';\r\nimport { getUser } from '../redux/selectors';\r\n\r\nconst styles = StyleSheet.create({\r\n  login: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#3CB371\",\r\n    paddingTop: 10, paddingBottom: 10,\r\n    borderRadius: 30,\r\n    width: 200,\r\n  },\r\n  createAccountButton: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#3CB371\",\r\n    paddingTop: 10, paddingBottom: 10,\r\n    borderRadius: 30,\r\n    width: 250,\r\n  },\r\n  text: {\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n  },\r\n  border: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    color: '#ffffff',\r\n    borderColor: '#ffffff',\r\n    borderBottomWidth: 2,\r\n    margin: 20,\r\n    width: 150,\r\n  },\r\n  errorText: {\r\n    color: '#ff2400',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [formErrorMsg, setFormErrorMsg] = useState('');\r\n\r\n  const handleUsernameUpdate = username => {\r\n    setFormErrorMsg('');\r\n    setEmail(username);\r\n  };\r\n\r\n  const handlePasswordUpdate = password => {\r\n    setFormErrorMsg('');\r\n    setPassword(password);\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    return re.test(email);\r\n  }\r\n\r\n  const validateForm = () => {\r\n    if (validateEmail(email) && password.length > 0) {\r\n      setFormValid(true);\r\n    } else {\r\n      setFormValid(false);\r\n      setFormErrorMsg('Invalid Form Entry')\r\n    }\r\n  };\r\n\r\n  const login = async () => {\r\n    validateForm();\r\n    if (formValid) {\r\n      let user = {\r\n        email: email,\r\n        password: password\r\n      }\r\n      props.loginUserBeog(user);\r\n    }    \r\n  }\r\n    \r\n    return (      \r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n        style={styles.login}\r\n      >\r\n        {props.user.loading\r\n          ? <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n          : <View style={styles.login}>\r\n              <Text style={styles.text}>Login</Text>\r\n              {formErrorMsg !== '' && <Text style={styles.errorText}>{formErrorMsg}</Text>}\r\n              <TextInput\r\n                placeholder=\"email\"\r\n                placeholderTextColor='#ffffff'\r\n                value={email}\r\n                onChangeText={handleUsernameUpdate}\r\n                autoCapitalize=\"none\"\r\n                style={styles.input}\r\n              />\r\n              <TextInput\r\n                placeholder=\"password\"\r\n                placeholderTextColor='#ffffff'\r\n                value={password}\r\n                onChangeText={handlePasswordUpdate}\r\n                secureTextEntry={true}\r\n                style={styles.input}\r\n              />\r\n              <TouchableOpacity style={styles.button} onPress={login} >\r\n                <Text style={styles.text}>Login</Text>\r\n              </TouchableOpacity>\r\n              <Text style={[styles.text, styles.border]}>-------- OR --------</Text>\r\n              <TouchableOpacity style={styles.createAccountButton} onPress={props.handleCreateAccount} >\r\n                <Text style={styles.text}>Create a BeOG Account</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n        }\r\n      </KeyboardAvoidingView>  \r\n      \r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: getUser(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUser, loginUserBeog, getHighScoreBeog })(Login);","import React, { Component, useState, useEffect } from \"react\";\r\nimport { View, Button, StyleSheet, TouchableOpacity, Text, ActivityIndicator } from \"react-native\";\r\nimport { connect } from 'react-redux';\r\nimport { logoutUserBeog, getHighScoreBeog } from '../redux/actions';\r\nimport { getUser, getScore } from '../redux/selectors';\r\n\r\nconst styles = StyleSheet.create({\r\n  userInfo: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  userName: {\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n  },\r\n  text: {\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#3CB371\",\r\n    paddingTop: 10, paddingBottom: 10,\r\n    borderRadius: 30,\r\n    width: 200,\r\n  },\r\n  border: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  }\r\n});\r\n\r\nconst UserInfo = (props) => {\r\n  const logout = async () => {\r\n    props.logoutUserBeog(props.user.token);\r\n  }\r\n\r\n  const howToPlay = () => {\r\n    props.handleHowToPlay(false);\r\n  }\r\n\r\n  return (\r\n    <View style={styles.userInfo}>\r\n      {props.user.loading\r\n        ? <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n        : <View style={styles.userInfo}>\r\n            <Text style={styles.userName}>Welcome: {props.user.displayname}</Text>\r\n            <TouchableOpacity style={[styles.button, styles.border]} onPress={props.handleStart} >\r\n              <Text style={styles.text}>Start!</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={[styles.button]} onPress={howToPlay} >\r\n              <Text style={styles.text}>How To Play</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={[styles.button, styles.border]} onPress={logout} >\r\n              <Text style={styles.text}>Logout</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n      }        \r\n    </View>\r\n  );    \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: getUser(state),\r\n  score: getScore(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {logoutUserBeog, getHighScoreBeog, getScore})(UserInfo);","import React, { useState } from \"react\";\r\nimport { View, Button, StyleSheet, TextInput, Text, ActivityIndicator, TouchableOpacity, KeyboardAvoidingView, Platform } from \"react-native\";\r\nimport { connect } from 'react-redux';\r\nimport { createUserBeog } from '../redux/actions';\r\nimport { getUser } from '../redux/selectors';\r\n\r\nconst AUTH_KEY = 'SuperSpecialBeOG690';\r\n\r\nconst styles = StyleSheet.create({\r\n  login: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#3CB371\",\r\n    paddingTop: 10, paddingBottom: 10,\r\n    borderRadius: 30,\r\n    width: 230,\r\n  },\r\n  text: {\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n  },\r\n  border: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    color: '#ffffff',\r\n    borderColor: '#ffffff',\r\n    borderBottomWidth: 2,\r\n    margin: 20,\r\n    width: 150,\r\n  },\r\n  errorText: {\r\n    color: '#ff2400',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nconst CreateAccount = (props) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [formErrorMsg, setFormErrorMsg] = useState('');\r\n\r\n  const handleFirstNameUpdate = name => {\r\n    setFormErrorMsg('');\r\n    setFirstName(name);\r\n  };\r\n\r\n  const handleLastNameUpdate = name => {\r\n    setFormErrorMsg('');\r\n    setLastName(name);\r\n  };\r\n\r\n  const handleEmailUpdate = email => {\r\n    setFormErrorMsg('');\r\n    setEmail(email);\r\n  };\r\n\r\n  const handlePasswordUpdate = password => {\r\n    setFormErrorMsg('');\r\n    setPassword(password);\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    return re.test(email);\r\n  }\r\n\r\n  const validateForm = () => {\r\n    if (firstName.length > 0 && lastName.length > 0 && validateEmail(email) && password.length > 8) {\r\n      setFormValid(true);\r\n    } else {\r\n      setFormValid(false);\r\n      setFormErrorMsg('Invalid Form Entry')\r\n    }\r\n  };\r\n\r\n  const createAccount = async () => {\r\n    validateForm();\r\n    if (formValid) {\r\n      let user = {\r\n        email: email,\r\n        password: password,\r\n        first_name: firstName,\r\n        last_name: lastName,\r\n        AUTH_KEY: AUTH_KEY,\r\n      }\r\n      props.createUserBeog(user);\r\n    }    \r\n  }\r\n    \r\n    return (\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n        style={styles.login}\r\n      >\r\n        {props.user.loading\r\n          ? <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n          : <View style={styles.login}>\r\n              <Text style={styles.text}>Create a BeOG Account</Text>\r\n              {formErrorMsg !== '' && <Text style={styles.errorText}>{formErrorMsg}</Text>}\r\n              <TextInput\r\n                placeholder=\"First Name\"\r\n                placeholderTextColor='#ffffff'\r\n                value={firstName}\r\n                onChangeText={handleFirstNameUpdate}\r\n                autoCapitalize=\"words\"\r\n                style={styles.input}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Last Name\"\r\n                placeholderTextColor='#ffffff'\r\n                value={lastName}\r\n                onChangeText={handleLastNameUpdate}\r\n                autoCapitalize=\"words\"\r\n                style={styles.input}\r\n              />\r\n              <TextInput\r\n                placeholder=\"email\"\r\n                placeholderTextColor='#ffffff'\r\n                value={email}\r\n                onChangeText={handleEmailUpdate}\r\n                autoCapitalize=\"none\"\r\n                style={styles.input}\r\n              />\r\n              <TextInput\r\n                placeholder=\"password\"\r\n                placeholderTextColor='#ffffff'\r\n                value={password}\r\n                onChangeText={handlePasswordUpdate}\r\n                secureTextEntry={true}\r\n                style={styles.input}\r\n              />\r\n              <TouchableOpacity style={styles.button} onPress={createAccount} >\r\n                <Text style={styles.text}>Create BeOG Account</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={[styles.button, styles.border]} onPress={props.returnHome} >\r\n                <Text style={styles.text}>Back</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n        }\r\n      </KeyboardAvoidingView>  \r\n      \r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: getUser(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { createUserBeog })(CreateAccount);","import React, { useState } from \"react\";\r\nimport { View, Button, StyleSheet, TextInput, Text, ActivityIndicator, TouchableOpacity, ImageBackground } from \"react-native\";\r\nimport Constants from 'expo-constants';\r\nimport { connect } from 'react-redux';\r\nimport { createUserBeog } from '../redux/actions';\r\nimport { getUser } from '../redux/selectors';\r\n\r\nconst backgroundImage = require('../assets/Full-background.png');\r\nconst introText = 'You are a god capable of creating boxes at will.  Prove that you are the true box god and take down rival box god Jeff Bezos.';\r\nconst instructionText = 'Rules of the game:\\nBoxes can be created above the cloud line.  A point is gained when you hit a circle.  A life is lost when you hit the ground or a platform.  You have three lives.  Show Bezos who the real box god is!';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#ffffff',\r\n    paddingTop: Constants.statusBarHeight,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  backgroundImage: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  h1: {\r\n    color: '#ffffff',\r\n    fontSize: 30,\r\n  },\r\n  introText: {\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n    margin: 20,\r\n  },\r\n  instructionText: {\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n    margin: 20,\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#3CB371\",\r\n    paddingTop: 10, paddingBottom: 10,\r\n    borderRadius: 30,\r\n    width: 200,\r\n  },\r\n  overlay: {\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  text: {\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n  },\r\n  border: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  }\r\n});\r\n\r\nconst HowToPlay = (props) => {\r\n  const [firstName, setFirstName] = useState('');\r\n\r\n  const handleFirstNameUpdate = name => {\r\n    setFirstName(name);\r\n  };\r\n\r\n  const goBack = () => {\r\n    props.handleHowToPlay(true);\r\n  }\r\n    \r\n    return (      \r\n      <View style={styles.container}> \r\n        <ImageBackground source={backgroundImage} style={styles.backgroundImage}>\r\n          <View style={styles.overlay}>\r\n            <Text style={styles.h1}>How To Play</Text>\r\n            <Text style={styles.introText}>{introText}</Text>\r\n            <Text style={styles.instructionText}>{instructionText}</Text>\r\n            <TouchableOpacity style={[styles.button, styles.border]} onPress={goBack} >\r\n              <Text style={styles.text}>Go Back</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </ImageBackground>\r\n      </View>        \r\n    );\r\n}\r\n\r\nexport default HowToPlay;","import React, { useState } from \"react\";\r\nimport { View, Button, StyleSheet, TextInput, Text, ActivityIndicator, TouchableOpacity, ImageBackground } from \"react-native\";\r\nimport Constants from 'expo-constants';\r\nimport { connect } from 'react-redux';\r\nimport { createUserBeog } from '../redux/actions';\r\nimport { getUser } from '../redux/selectors';\r\n\r\nconst backgroundImage = require('../assets/Full-background.png');\r\nconst playOnMobileText = 'Please play Box God on your smartphone in portrait orientation.  A desktop version is in development.';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#ffffff',\r\n    paddingTop: Constants.statusBarHeight,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  backgroundImage: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  h1: {\r\n    color: '#ffffff',\r\n    fontSize: 30,\r\n  },\r\n  introText: {\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n    margin: 20,\r\n  },\r\n  overlay: {\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nconst PlayOnMobile = (props) => {\r\n    \r\n    return (      \r\n      <View style={styles.container}> \r\n        <ImageBackground source={backgroundImage} style={styles.backgroundImage}>\r\n          <View style={styles.overlay}>\r\n            <Text style={styles.h1}>Box God</Text>\r\n            <Text style={styles.introText}>{playOnMobileText}</Text>\r\n          </View>\r\n        </ImageBackground>\r\n      </View>        \r\n    );\r\n}\r\n\r\nexport default PlayOnMobile;","import * as React from 'react';\r\nimport { Text, View, StyleSheet, ImageBackground, Dimensions } from 'react-native';\r\nimport Constants from 'expo-constants';\r\nimport Game from '../Game';\r\nimport {connect} from 'react-redux';\r\nimport {getUser} from '../redux/selectors';\r\nimport {loginUserFailure, getHighScoreBeog, refreshUserBeog} from '../redux/actions';\r\nimport Login from './Login';\r\nimport UserInfo from './UserInfo';\r\nimport Bezos from '../renderers/Bezos';\r\nimport CreateAccount from './CreateAccount';\r\nimport HowToPlay from './HowToPlay';\r\nimport PlayOnMobile from './PlayOnMobile';\r\n\r\nconst backgroundImage = require('../assets/Full-background.png');\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nclass StartScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isPlaying: false,\r\n      isLoggedIn: false,\r\n      isCreateAccount: false,\r\n      isHowToPlay: false,\r\n    };\r\n\r\n    this.handleStartClick = this.handleStartClick.bind(this);\r\n    this.handleCreateAccount = this.handleCreateAccount.bind(this);\r\n    this.handleHowToPlay = this.handleHowToPlay.bind(this);\r\n    this.returnHome = this.returnHome.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //refresh token\r\n    if (this.props.user.token) { \r\n      this.refreshUser(); \r\n    }\r\n    if (this.props.user.loading) {\r\n      setInterval(this.requestTimedOut, 10000);\r\n    }\r\n  }\r\n\r\n  refreshUser = async () => {\r\n    this.props.refreshUserBeog(this.props.user.token);\r\n  }\r\n\r\n  requestTimedOut = () => {\r\n    if (this.props.user.loading) {\r\n      this.props.loginUserFailure('Request timed out. Please try again.');\r\n    }\r\n  }\r\n\r\n  handleStartClick() {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      isPlaying: true,\r\n    }));\r\n  }\r\n\r\n  handleCreateAccount() {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      isCreateAccount: true,\r\n    }));\r\n  }\r\n\r\n  handleHowToPlay(goBack) {\r\n    if (goBack) {\r\n      this.setState(prevState => ({\r\n        ...prevState,\r\n        isHowToPlay: false,\r\n      }));\r\n    } else {\r\n      this.setState(prevState => ({\r\n        ...prevState,\r\n        isHowToPlay: true,\r\n      }));\r\n    }    \r\n  }\r\n\r\n  returnHome = () => {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      isPlaying: false,\r\n      isCreateAccount: false,\r\n    }));\r\n  }\r\n\r\n  setIsLoggedIn = () => {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      isLoggedIn: true,\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    const isPlaying = this.state.isPlaying;\r\n    const isHowToPlay = this.state.isHowToPlay;\r\n    const isCreateAccount = this.state.isCreateAccount;\r\n\r\n    if (!isPlaying) {\r\n      if (isCreateAccount && !this.props.user.token) {\r\n        return (\r\n          <View style={styles.container}>\r\n            <ImageBackground source={backgroundImage} style={styles.backgroundImage}>            \r\n              <View style={styles.overlay}>                \r\n                <Bezos size={[width/3, height/4]} />   \r\n                {this.props.user.error && <Text style={styles.errorText}>{this.props.user.error}</Text>}\r\n                <CreateAccount returnHome={this.returnHome} />\r\n                <Text style={styles.companyTags}>BeOG & Sight Productions</Text>\r\n              </View>  \r\n            </ImageBackground>  \r\n          </View>          \r\n        )        \r\n      } else if (width > 480) {\r\n        return (<PlayOnMobile /> );\r\n      } else if (isHowToPlay) {\r\n        return ( <HowToPlay handleHowToPlay={this.handleHowToPlay} /> );\r\n      } else {\r\n        return (\r\n          <View style={styles.container}>\r\n            <ImageBackground source={backgroundImage} style={styles.backgroundImage}>            \r\n              <View style={styles.overlay}>\r\n                <Bezos size={[width/3, height/4]} />   \r\n                <Text style={styles.headerText}>BOX GOD</Text>\r\n                {this.props.user.error && <Text style={styles.errorText}>{this.props.user.error}</Text>}\r\n                {this.props.user.token\r\n                  ? <UserInfo handleHowToPlay={this.handleHowToPlay} handleStart={this.handleStartClick} />\r\n                  : <Login handleCreateAccount={this.handleCreateAccount} />\r\n                }\r\n                <Text style={styles.companyTags}>BeOG & Sight Productions</Text>\r\n              </View>  \r\n            </ImageBackground>  \r\n          </View>\r\n        );\r\n      }      \r\n    } else {\r\n      return ( <Game returnHome={this.returnHome} /> );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#ffffff',\r\n    paddingTop: Constants.statusBarHeight,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  backgroundImage: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  headerText: {\r\n    color: '#ffffff',\r\n    fontSize: 40,\r\n  },\r\n  text: {\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n  },\r\n  errorText: {\r\n    color: '#ff2400',\r\n    fontSize: 16,\r\n  },\r\n  companyTags: {\r\n    paddingTop: 20,\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n  },\r\n  overlay: {\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  user: getUser(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getUser, loginUserFailure, getHighScoreBeog, refreshUserBeog\r\n})(StartScreen);","import { \r\n  SET_POINTS,\r\n  SET_LIVES, \r\n  SET_HISCORE,\r\n  SCORE_ACTION,\r\n  SCORE_ERROR,\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  points: 0,\r\n  lives: 3,\r\n  hiScore: 0,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst score = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_POINTS: {\r\n      return {\r\n        ...state,\r\n        points: action.payload.points,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    }\r\n    case SET_LIVES: {\r\n      return {\r\n        ...state,\r\n        lives: action.payload.lives,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    }\r\n    case SET_HISCORE: {\r\n      return {\r\n        ...state,\r\n        hiScore: action.payload.hiScore,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    }\r\n    case SCORE_ACTION: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    }\r\n    case SCORE_ERROR: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default score;","import { \r\n  USER_ACTION,\r\n  REFRESH_USER,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_FAILURE,\r\n  LOGOUT_USER_SUCCESS,\r\n  LOGOUT_USER_FAILURE\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  email: \"\",\r\n  displayname: \"\",\r\n  token: \"\",\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst user = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER_ACTION:\r\n      return {\r\n          ...state, \r\n          loading: true,\r\n      };\r\n    case REFRESH_USER:\r\n      return {\r\n          ...state, \r\n          token: action.payload,\r\n      };  \r\n    case LOGIN_USER_SUCCESS:\r\n      return {\r\n          ...state,\r\n          username: action.payload.user.user_login,\r\n          email: action.payload.user.user_email,\r\n          displayname: action.payload.user.display_name,\r\n          token: action.payload.jwt[0].token,\r\n          error: null,\r\n          loading: false,\r\n      };\r\n    case LOGIN_USER_FAILURE:\r\n      return {\r\n          ...state, \r\n          loading: false, \r\n          error: action.payload,\r\n      };\r\n    case LOGOUT_USER_SUCCESS:\r\n      return {\r\n          ...state, \r\n          username: \"\",\r\n          email: \"\",\r\n          displayname: \"\",\r\n          token: \"\",\r\n          error: null,\r\n          loading: false,\r\n      };\r\n    case LOGOUT_USER_FAILURE:\r\n      return {\r\n          ...state, \r\n          username: \"\",\r\n          email: \"\",\r\n          displayname: \"\",\r\n          token: \"\",\r\n          error: action.payload,\r\n          loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default user;","import { combineReducers } from \"redux\";\r\nimport score from \"./score\";\r\nimport user from \"./user\";\r\n\r\nexport default combineReducers({ score, user });","import { createStore, applyMiddleware } from \"redux\";\r\nimport { Platform } from 'react-native';\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport createSecureStore from \"redux-persist-expo-securestore\";\r\nimport webStorage from \"redux-persist/lib/storage\";\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\n\r\nconst reactNativeStorage = createSecureStore();\r\n\r\nconst storage = Platform.OS === 'ios' || Platform.OS === 'android'\r\n  ? reactNativeStorage : webStorage;\r\n\r\nconst persistConfig = {\r\n key: 'root',\r\n storage: storage,\r\n blacklist: ['score'],\r\n stateReconciler: autoMergeLevel2\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(persistedReducer, applyMiddleware(thunk));\r\nexport const persistor = persistStore(store);","import React, { useState } from 'react';\r\nimport StartScreen from './components/start-screen';\r\nimport { PersistGate } from 'redux-persist/lib/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <StartScreen />\r\n      </PersistGate>      \r\n    </Provider>\r\n  );\r\n}","module.exports = __webpack_public_path__ + \"static/media/bezos-face.e43e5f1f.png\";","module.exports = __webpack_public_path__ + \"static/media/bezos-face-mad.712cc52f.png\";","module.exports = __webpack_public_path__ + \"static/media/green-plat.7584d70f.png\";","module.exports = __webpack_public_path__ + \"static/media/cloud-37010_640.62201530.png\";","module.exports = __webpack_public_path__ + \"static/media/Full-background.fc86a6e1.png\";"],"sourceRoot":""}